#summary One-sentence summary of this page.

= Introduction =

Add your content here.


= Details =

Based on our query semantics, we introduce a declarative query language called CQELS
language by extending the SPARQL 1.1 grammar6 under the EBNF notation. We add a
query pattern to present window operators on RDF Stream into the GraphPatternNotTriples
pattern.
GraphPatternNotTriples ::= GroupOrUnionGraphPattern| OptionalGraphPattern
|MinusGraphPattern | GraphGraphPattern | StreamGraphPattern
j ServiceGraphPattern | Filter | Bind

Assuming that each stream has an IRI as identification, the StreamGraphPattern pattern is defined as follows.

StreamGraphPattern ::= ‘STREAM’ ‘[’ Window ‘]’ VarOrIRIref ‘f’TriplesTemplate‘g’
Window ::= Rangle j Triple j ‘NOW’ j ‘ALL’
Range ::= ‘RANGE’ Duration (‘SLIDE’ Duration)?
Triple ::= ‘TRIPLES’ INTEGER
Duration ::= (INTEGER ‘d’ j ‘h’ j ‘m’ j ‘s’ j ‘ms’ j ‘ns’)+

where VarOrIRIRef and TripleTemplate are patterns for the variable/IRI and triple template of SPARQL 1.1, respectively. Range corresponds to a time-based window while Triple corresponds to a triple-based window. The keyword SLIDE is used for specifying the sliding
parameter of time-based window, whose time interval is specified by Duration.

Add your content here.  Format your content with:
  * Text in *bold* or _italic_
  * Headings, paragraphs, and lists
  * Automatic links to other wiki pages

{{{
PREFIX lv: <http://deri.org/floorplan/>
PREFIX dc: <http://purl.org/dc/elements/1.1/> 
PREFIX foaf: <http://xmlns.com/foaf/0.1/> 
SELECT ?locName  
FROM NAMED <http://deri.org/floorplan/>
WHERE {
STREAM <http://deri.org/streams/rfid> [NOW] 
{?person lv:detectedAt ?loc} 
{?person foaf:name "AUTHORNAME"^^<http://www.w3.org/2001/XMLSchema#string> }
GRAPH <http://deri.org/floorplan/> 
{?loc lv:name ?locName}
}
}}}

{{{
PREFIX lv: <http://deri.org/floorplan/>
SELECT  ?person1 ?person2 
FROM NAMED <http://deri.org/floorplan/>
WHERE {
GRAPH <http://deri.org/floorplan/> 
{?loc1 lv:connected ?loc2}
STREAM <http://deri.org/streams/rfid> [NOW] 
{?person1 lv:detectedAt ?loc1} 
STREAM <http://deri.org/streams/rfid> [RANGE 3s] {?person2 lv:detectedAt ?loc2}
}
}}}

{{{
PREFIX lv: <http://deri.org/floorplan/>
PREFIX dc: <http://purl.org/dc/elements/1.1/> 
PREFIX foaf: <http://xmlns.com/foaf/0.1/> 
SELECT  ?locName 
FROM NAMED <http://deri.org/floorplan/>
WHERE {
GRAPH <http://deri.org/floorplan/> 
{?loc lv:name ?locName}
STREAM <http://deri.org/streams/rfid> [TRIPLES 1] 
{?auth lv:detectedAt ?loc} 
STREAM <http://deri.org/streams/rfid> [RANGE 5s] {?coAuth lv:detectedAt ?loc}
{?paper dc:creator ?auth. ?paper dc:creator ?coAuth.
 ?auth foaf:name "AUTHORNAME"^^<http://www.w3.org/2001/XMLSchema#string> }
FILTER(?auth!=?coAuth)
}
}}}

{{{
PREFIX lv: <http://deri.org/floorplan/>
PREFIX dc: <http://purl.org/dc/elements/1.1/> 
PREFIX foaf: <http://xmlns.com/foaf/0.1/> 
PREFIX dcterms: <http://purl.org/dc/terms/> 
PREFIX swrc: <http://swrc.ontoware.org/ontology#>
SELECT ?editorName WHERE{
STREAM <http://deri.org/streams/rfid> [TRIPLES 1] {?auth lv:detectedAt ?loc1} 
STREAM <http://deri.org/streams/rfid> [RANGE 15s] {?editor lv:detectedAt ?loc2}
GRAPH <http://deri.org/floorplan/> {?loc1 lv:connected ?loc2} 
?paper dc:creator ?auth. ?paper dcterms:partOf ?proceeding.
?proceeding swrc:editor ?editor. ?editor foaf:name ?editorName.
 ?auth foaf:name "AUTHORNAME"^^<http://www.w3.org/2001/XMLSchema#string>
}
}}}

{{{
PREFIX lv: <http://deri.org/floorplan/>
PREFIX dc: <http://purl.org/dc/elements/1.1/> 
PREFIX foaf: <http://xmlns.com/foaf/0.1/> 
SELECT ?loc2 ?locName (count(distinct ?coAuth) as ?noCoAuths) 
FROM NAMED <http://deri.org/floorplan/>
WHERE {
GRAPH <http://deri.org/floorplan/> 
{?loc2 lv:name ?locName.?loc2 lv:connected ?loc1}
STREAM <http://deri.org/streams/rfid> [TRIPLES 1] 
{?auth lv:detectedAt ?loc1} 
STREAM <http://deri.org/streams/rfid> [RANGE 30s] {?coAuth lv:detectedAt ?loc2}
{?paper dc:creator ?auth. ?paper dc:creator ?coAuth.
 ?auth foaf:name "AUTHORNAME"^^<http://www.w3.org/2001/XMLSchema#string> }
FILTER(?auth!=?coAuth)
}
GROUP BY ?loc2 ?locName
}}}
  